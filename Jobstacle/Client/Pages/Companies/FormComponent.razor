@inject HttpClient _client


<EditForm Model="@company" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <fieldset disabled="@Disabled" >

        <div class="form-group">
        <label>Company Logo: </label>
        <div>
            @if (company.ComLogo != null && company.ComLogo.Length > 0)
            {
                <img src="data:image/png;base64,@Convert.ToBase64String(company.ComLogo)" alt="Company Logo" style="max-width: 100px; max-height: 100px;" />
            }
            else
            {
                <span>No Logo</span>
            }

            @if (!Disabled)  
            {
                <InputFile OnChange="HandleFileUpload" class="form-control" />
            }

            <ValidationMessage For="@(()=>company.ComLogo)" />
        </div>
    </div>

        <div class="form-group">
            <label>Name: </label>
            <div>
                <InputText @bind-Value="@company.Name" class="form-control" />
                <ValidationMessage For="@(() => company.Name)" />
            </div>
        </div>

        <div class="form-group">
            <label>Contact Number: </label>
            <div>
                <InputText @bind-Value="@company.ContactNumber" class="form-control" />
                <ValidationMessage For="@(() => company.ContactNumber)" />
            </div>
        </div>

        <div class="form-group">
            <label>Email: </label>
            <div>
                <InputText @bind-Value="@company.Email" class="form-control" />
                <ValidationMessage For="@(() => company.Email)" />
            </div>
        </div>

        <div class="form-group">
            <label>Description: </label>
            <div>
                <InputTextArea @bind-Value="@company.Description" class="form-control" />
                <ValidationMessage For="@(() => company.Description)" />
            </div>
        </div>

    
    </fieldset>
    <br />

    @if (!Disabled)
    {
        <button type="submit" class="btn btn-secondary custom-btn">
            @ButtonText
        </button>
    }
    <BackToList Target="companies" />

</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Company? company { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private async Task HandleFileUpload(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            using (var stream = file.OpenReadStream())
            {
                using (var memoryStream = new MemoryStream())
                {
                    await stream.CopyToAsync(memoryStream);
                    company.ComLogo = memoryStream.ToArray();
                }
            }
        }
    }

}