@inject HttpClient _client


<EditForm Model="@jobseeker" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <fieldset disabled="@Disabled" >
        <div class="form-group">
            <label>Job Seeker Picture: </label>
            <div>
                @if (jobseeker.JobSeekerPic != null && jobseeker.JobSeekerPic.Length > 0)
                {
                    <img src="data:image/png;base64,@Convert.ToBase64String(jobseeker.JobSeekerPic)" alt="Job Seeker Picture" style="max-width: 100px; max-height: 100px;" />
                }
                else
                {
                    <span>No Logo</span>
                }

                @if (!Disabled)
                {
                    <InputFile OnChange="HandleFileUpload" class="form-control" />
                }

                <ValidationMessage For="@(()=>jobseeker.JobSeekerPic)" />
            </div>
        </div>
    <div class="form-group">
        <label>Name: </label>
        <div>
            <InputText @bind-Value="jobseeker.Name" class="form-control"/>
            <ValidationMessage For="@(() => jobseeker.Name)" />
        </div>
    </div>

    <div class="form-group">
        <label>Email: </label>
        <div>
            <InputText @bind-Value="jobseeker.Email" class="form-control" />
            <ValidationMessage For="@(() => jobseeker.Email)" />
        </div>
    </div>
    <div class="form-group">
        <label>Gender: </label>
        <div>
            <InputText @bind-Value="jobseeker.Gender" class="form-control" />
            <ValidationMessage For="@(() => jobseeker.Gender)" />
        </div>
    </div>
    <div class="form-group">
        <label>Resume: </label>
        <div>
            <InputText @bind-Value="jobseeker.Resume" class="form-control" />
            <ValidationMessage For="@(() => jobseeker.Resume)" />
        </div>
    </div>
    <div class="form-group">
        <label>Location: </label>
        <div>
            <InputText @bind-Value="jobseeker.Location" class="form-control" />
            <ValidationMessage For="@(() => jobseeker.Location)" />
        </div>
    </div>
        <div class="form-group">
            <label>Contact Number: </label>
            <div>
                <InputText @bind-Value="jobseeker.ContactNumber" class="form-control" />
                <ValidationMessage For="@(() => jobseeker.Location)" />
            </div>
        </div>

    
    </fieldset>
    <br />

    @if (!Disabled)
    {
        <button type="submit" class="btn btn-secondary custom-btn">
            @ButtonText
        </button>
    }
    <BackToList Target="jobseekers" />

</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public JobSeeker? jobseeker { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    private async Task HandleFileUpload(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            using (var stream = file.OpenReadStream())
            {
                using (var memoryStream = new MemoryStream())
                {
                    await stream.CopyToAsync(memoryStream);
                    jobseeker.JobSeekerPic = memoryStream.ToArray();
                }
            }
        }
    }
  

}
